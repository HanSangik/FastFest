<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="FreeBoard">

   <!-- 쿼리를 xml로 작성하고 id:식별값  
        parameterType:우리가 전달할값 
        resultType : 받아오는값  -->
        
   <!-- if test="key=='1'"  - 이렇게 쓰면 안된다 인식안된다 -->
   
   <select id="FreeBoard_getList"  parameterType="FreeBoardDto"  
                                   resultType="FreeBoardDto">
       
    select * from
   (
           select
         seq
         ,userid
         ,username
         ,title
         ,contents   
         ,ifnull(hit , 0) hit      
         ,group_id
         ,depth
         ,g_level
         ,regdate
         ,ifnull(likehit, 0) likehit
            ,@rownum := @rownum+1 AS rnum
      from free_board, (select @rownum:=0) B
      order by group_id desc, g_level asc 
   )A
    limit #{start}, #{pageSize} 
   
   </select>
   
   <select id="FreeBoard_getTotal"  parameterType="FreeBoardDto"  
                                   resultType="Integer">
       
    select count(*) from free_board   
   </select>
   
   <select id="FreeBoard_getView"  parameterType="FreeBoardDto"  
                                   resultType="FreeBoardDto">
     select
         seq
         ,userid
         ,username
         ,title
         ,contents   
         ,ifnull(hit , 0) hit      
         ,group_id
         ,depth
         ,g_level
         ,regdate
         ,ifnull(likehit, 0) likehit
      from free_board where seq=#{seq}
   </select>
   
   <insert id="FreeBoard_insert"  parameterType="FreeBoardDto"  >
      <selectKey resultType="String" keyProperty="seq" order="BEFORE">
      select ifnull(max(seq),0)+1 as seq 
      from free_board
      </selectKey>
      insert into free_board(
         seq
         ,title
         ,userid
         ,username
         ,contents
         ,regdate
         ,hit
         ,group_id
         ,depth
         ,g_level
      )
      values(
         #{seq}
         ,#{title}
         ,#{userid}
         ,#{username}
         ,#{contents}
         ,now()
         ,0
         ,#{seq}
         ,0
         ,1   
      )
   </insert>
   
   
   <insert id="FreeBoard_reply"  parameterType="FreeBoardDto"  >
      <selectKey resultType="String" keyProperty="seq" order="BEFORE">
      select ifnull(max(seq),0)+1 as seq 
      from free_board
      </selectKey>
      insert into free_board(
         seq
         ,title
         ,userid
         ,username
         ,contents
         ,regdate
         ,hit
         ,group_id
         ,depth
         ,g_level
      )
      values(
         #{seq}
         ,#{title}
         ,#{userid}
         ,#{username}
         ,#{contents}
         ,now()
         ,0
         ,#{group_id}   --  부모것을 가져온다 
         ,#{depth}+1
         ,#{g_level}+1   
      )
   </insert>
   
   <delete id="FreeBoard_delete" parameterType="String" >
      delete from free_board where seq=#{seq}
   </delete>
   
   <update id="FreeBoard_update" parameterType="FreeBoardDto" >
      update free_board 
         set title = #{title}
            ,username = #{username}
            ,contents = #{contents}
      where  seq=#{seq}
   </update>
   
   <update id="FreeBoard_updateLevel" parameterType="FreeBoardDto">
   update free_board set g_level=g_level+1 
   where group_id=#{group_id} and g_level>#{g_level}     
   </update>
   
   <!-- 게시글 추천수 -->
   <update id="updateLike" parameterType="int">
      update free_board set 
      likehit = likehit+1
      where seq = #{seq}
   </update>
   
   <!-- 게시글 추천수취소 -->
   <update id="updateLikeCancel" parameterType="int">
      update free_board set 
      likehit = likehit - 1
      where seq = #{seq}
   </update>
   
   <!-- 게시글 추천 시 Like 테이블에 insert -->
   <insert id="insertLike">
      insert into MP_LIKE( seq , userid) 
      values(#{seq} ,#{userid})
   </insert>
   
   <!-- 게시글 추천취소 시 delete -->
   <delete id="deleteLike">
      delete from MP_LIKE where seq = #{seq} and userid = #{userid}
   </delete>
   
   <!-- 게시글 추천 시 Check를 1로 만들어서 중복방지-->
   <update id="updateLikeCheck">
      update MP_LIKE set LIKECHECK = 1
      where seq = #{seq} and userid = #{userid}
   </update>
   
   <!-- 게시글 추천취소 시 다시 0  -->
   <update id="updateLikeCheckCancel">
      update MP_LIKE set LIKECHECK = 0
      where seq = #{seq} and userid = #{userid}
   </update>
   
   <!-- 게시글 추천 중복방지 select문 -->
   <select id="likeCheck" resultType="int">
      select count(*) from MP_LIKE where seq = #{seq} and userid = #{userid} 
   </select>   
   

</mapper>