<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="Gallery">

	<!-- 쿼리를 xml로 작성하고 id:식별값  
		  parameterType:우리가 전달할값 
	     resultType : 받아오는값  -->
	     
	<!-- if test="key=='1'"  - 이렇게 쓰면 안된다 인식안된다 -->
	
	<select id="Gallery_getList"  parameterType="GalleryDto"  resultType="GalleryDto">
 		
			select * from (
				select T.*, @rownum := @rownum+1 AS rnum,
				(
					case
				    when T.id in 
							(select  B.like_boardId
								from t_gallery A, pro1_like B
								where 
								B.like_userId = #{userSeq}
								and
								B.like_boardType = 2
								and
								B.like_boardId = A.id)
						then '1'
					 else '0'
				     end
				) as likeYN
				from t_gallery T, (select @rownum:=0) R

				<if test='key!=null and keyword!=null'>
		
					<if test='key=="1"'>
					where title like concat('%', #{keyword} , '%') or
					      comment like concat('%', #{keyword} , '%') or 
					      writer like concat('%', #{keyword} , '%') 
					</if>
					
					<if test='key=="2"'>
					where title like concat('%', #{keyword} , '%')
					</if>
					
					<if test='key=="3"'>
					where comment like concat('%', #{keyword} , '%')
					</if>
					
					<if test='key=="4"'>
					where title like concat('%', #{keyword} , '%') or
					      comment like concat('%', #{keyword} , '%') 
					</if>
					
				</if> 
			
			order by id desc
		) A
		limit #{start}, #{pageSize}    
	</select>
	<!--  
		paging  쿼리는  dbms마다 다르다 
		
		select ~~  limit 시작위치, 개수
	
	 -->
	 
	<!--   페이징때문에 전체 레코드 개수를 알아오기 위한 쿼리가 필요한다  -->
	
	<select id="Gallery_getTotal" parameterType="GalleryDto" resultType="Integer">
		select count(*) from t_gallery 
		<if test='key!=null and keyword!=null'>

			<if test='key=="1"'>
			where title like concat('%', #{keyword} , '%') or
			      comment like concat('%', #{keyword} , '%') or 
			      writer like concat('%', #{keyword} , '%') 
			</if>
			
			<if test='key=="2"'>
			where title like concat('%', #{keyword} , '%')
			</if>
			
			<if test='key=="3"'>
			where comment like concat('%', #{keyword} , '%')
			</if>
			
			<if test='key=="4"'>
			where title like concat('%', #{keyword} , '%') or
			      comment like concat('%', #{keyword} , '%') 
			</if>
			
		</if> 
		
	</select>

	
	<insert id="Gallery_insert" parameterType="GalleryDto">
		insert into t_gallery
		( title, writer, comment, image, wdate)
		values
		(#{title}, #{writer}, #{comment}, #{image}, now())
	</insert>
	
	<select id="Gallery_getView"  parameterType="String"  resultType="GalleryDto">
 		select
			A.id
			,A.title
			,A.writer
			,A.comment 
			,A.wdate
			,A.image
			,ifnull(likehit, 0) likehit
		from t_gallery A where id=#{id}

	</select>
	
	<delete id="Gallery_delete" parameterType="String" >
	delete from t_gallery where id=#{id}
	</delete>
	
	
	<update id="Gallery_update" parameterType="GalleryDto" >
	update t_gallery 
		set title = #{title}
			,writer = #{writer}
			,comment = #{comment}
			,image = #{image}
	where  id=#{id}
	</update>
	
		<!-- 게시글 추천수 -->
	<update id="updateLike" parameterType="int">
		update t_gallery set 
		likehit = likehit+1
		where id = #{id}
	</update>
	
	<!-- 게시글 추천수취소 -->
	<update id="updateLikeCancel" parameterType="int">
		update t_gallery set 
		likehit = likehit - 1
		where id = #{id}
	</update>
	
	<!-- 게시글 추천 시 Like 테이블에 insert -->
	<insert id="insertLike">
		insert into MP_LIKE( id , userid) 
		values(#{id} ,#{writer})
	</insert>
	
	<!-- 게시글 추천취소 시 delete -->
	<delete id="deleteLike">
		delete from MP_LIKE where id = #{id} and userid = #{writer}
	</delete>
	
	<!-- 게시글 추천 시 Check를 1로 만들어서 중복방지-->
	<update id="updateLikeCheck">
		update MP_LIKE set LIKECHECK = 1
		where id = #{id} and userid = #{writer}
	</update>
	
	<!-- 게시글 추천취소 시 다시 0  -->
	<update id="updateLikeCheckCancel">
		update MP_LIKE set LIKECHECK = 0
		where id = #{id} and userid = #{writer}
	</update>
	
	<!-- 게시글 추천 중복방지 select문 -->
	<select id="likeCheck" resultType="int">
		select count(*) from MP_LIKE where id = #{id} and userid = #{writer} 
	</select>	
	
		
</mapper>















